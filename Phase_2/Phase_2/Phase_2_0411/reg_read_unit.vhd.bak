LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

LIBRARY work;
USE work.type_def.all;


ENTITY reg_read_unit IS
	GENERIC (LEN : INTEGER := 32);
	PORT(
		read_reg_1		: IN STD_LOGIC_VECTOR(4 DOWNTO 0);
		read_reg_2		: IN STD_LOGIC_VECTOR(4 DOWNTO 0);
		reg_values		: IN REG_ARRAY(LEN-1 DOWNTO 0);
		read_data_1		: OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
		read_data_2		: OUT STD_LOGIC_VECTOR(31 DOWNTO 0)
	);
END ENTITY;

ARCHITECTURE behavior OF reg_read_unit IS
	
BEGIN

	-- Multiplexer to select the output for Read Register 1
	read_mux_1: PROCESS(read_reg_1)
	begin
		
		read_data_1 <= reg_values(to_integer(unsigned(read_reg_1)));
		
	END PROCESS;
	
	-- Multiplexer to select the output for Read Register 2
	read_mux_2: PROCESS(read_reg_2)
	begin
	
		read_data_2 <= reg_values(to_integer(unsigned(read_reg_2)));
		
	END PROCESS;
	
END ARCHITECTURE;